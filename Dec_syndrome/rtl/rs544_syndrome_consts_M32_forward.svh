// Auto-generated by gen_rs544_syndrome_consts_svh_v2_fix.py
// RS(544,522) Block-Horner, M=32, α=GF1024(2)
// WEIGHT[j][m]     = α^( j*(M-1-m) )  // 反向索引版（块内从高次到低次）
// WEIGHT_FWD[j][m] = α^( j*m )         // 前向索引版（端口 data_i[m]×α^{j*m}）
// FEEDBACK[j]      = α^( j*M )

`ifndef RS544_SYNDROME_CONSTS_M32_SVH
`define RS544_SYNDROME_CONSTS_M32_SVH

package rs544_syndrome_consts_M32_pkg;
  localparam int J = 22;
  localparam int M = 32;
  // 元素位宽 10-bit：多项式基，bit k = x^k 系数（与 ff_gf2_10_wrapper.py 一致）
  // python_index
  // {WEIGHT_FWD[0]: {0, 1, ..., 20, 21}}
  // {WEIGHT_FWD[1]: {0, 1, ..., 20, 21}}
  // {             ...                  }
  // {WEIGHT_FWD[21]: {0, 1, ..., 20, 21}}
  // python_index = {0, 1, ..., 20, 21}  weight_fwd[j][m] = α^{ j*m }  // 端口 data_i[m]×α^{j*m} 场景

  // verilog_index
  //  {WEIGHT_FWD[21]: {21, 20, ..., 1, 0}}
  //  {WEIGHT_FWD[20]: {21, 20, ..., 1, 0}}
  //  {              ...                  }
  //  {WEIGHT_FWD[0] : {21, 20, ..., 1, 0}}
  // verilog_index = {21, 20, ..., 1, 0} weight_fwd[j][m] = α^{ j*(M - 1 - m) }
  
  // 直观显示 WEIGHT_FWD第0行 = {α^(1*0), α^(1*1), ..., α^(1*31)} 
  // 直观显示 WEIGHT_FWD第1行 = {α^(2*0), α^(2*1), ..., α^(2*31)} 
  localparam logic [9:0] WEIGHT_FWD [J-1:0][M-1:0] = '{
    { 10'h001, 10'h002, 10'h004, 10'h008, 10'h010, 10'h020, 10'h040, 10'h080, 10'h100, 10'h200, 10'h009, 10'h012, 10'h024, 10'h048, 10'h090, 10'h120, 10'h240, 10'h089, 10'h112, 10'h224, 10'h041, 10'h082, 10'h104, 10'h208, 10'h019, 10'h032, 10'h064, 10'h0C8, 10'h190, 10'h320, 10'h249, 10'h09B }, // j=1
    { 10'h001, 10'h004, 10'h010, 10'h040, 10'h100, 10'h009, 10'h024, 10'h090, 10'h240, 10'h112, 10'h041, 10'h104, 10'h019, 10'h064, 10'h190, 10'h249, 10'h136, 10'h0D1, 10'h344, 10'h10B, 10'h025, 10'h094, 10'h250, 10'h152, 10'h141, 10'h10D, 10'h03D, 10'h0F4, 10'h3D0, 10'h35B, 10'h177, 10'h1D5 }, // j=2
    { 10'h001, 10'h008, 10'h040, 10'h200, 10'h024, 10'h120, 10'h112, 10'h082, 10'h019, 10'h0C8, 10'h249, 10'h26C, 10'h344, 10'h216, 10'h094, 10'h0A9, 10'h141, 10'h21A, 10'h0F4, 10'h3A9, 10'h177, 10'h3AA, 10'h16F, 10'h36A, 10'h366, 10'h306, 10'h006, 10'h030, 10'h180, 10'h01B, 10'h0D8, 10'h2C9 }, // j=3
    { 10'h001, 10'h010, 10'h100, 10'h024, 10'h240, 10'h041, 10'h019, 10'h190, 10'h136, 10'h344, 10'h025, 10'h250, 10'h141, 10'h03D, 10'h3D0, 10'h177, 10'h35D, 10'h1B5, 10'h366, 10'h205, 10'h018, 10'h180, 10'h036, 10'h360, 10'h265, 10'h211, 10'h158, 10'h1AD, 10'h2E6, 10'h233, 10'h378, 10'h3E5 }, // j=4
    { 10'h001, 10'h020, 10'h009, 10'h120, 10'h041, 10'h032, 10'h249, 10'h1A2, 10'h025, 10'h0A9, 10'h10D, 10'h1E8, 10'h177, 10'h2B3, 10'h2DD, 10'h306, 10'h018, 10'h300, 10'h0D8, 10'h336, 10'h211, 10'h2B0, 10'h2BD, 10'h31D, 10'h378, 10'h3C3, 10'h08E, 10'h1E4, 10'h0F7, 10'h2DF, 10'h346, 10'h00A }, // j=5
    { 10'h001, 10'h040, 10'h024, 10'h112, 10'h019, 10'h249, 10'h344, 10'h094, 10'h141, 10'h0F4, 10'h177, 10'h16F, 10'h366, 10'h006, 10'h180, 10'h0D8, 10'h265, 10'h056, 10'h1AD, 10'h38A, 10'h378, 10'h38F, 10'h238, 10'h33B, 10'h36B, 10'h346, 10'h014, 10'h109, 10'h2D0, 10'h145, 10'h1F4, 10'h1E7 }, // j=6
    { 10'h001, 10'h080, 10'h090, 10'h082, 10'h190, 10'h1A2, 10'h094, 10'h282, 10'h3D0, 10'h3AA, 10'h2DD, 10'h003, 10'h180, 10'h1B0, 10'h186, 10'h2B0, 10'h2E6, 10'h1BC, 10'h38F, 10'h079, 10'h0F7, 10'h36E, 10'h005, 10'h280, 10'h2D0, 10'h28A, 10'h3D9, 10'h323, 10'h2C4, 10'h098, 10'h08B, 10'h119 }, // j=7
    { 10'h001, 10'h100, 10'h240, 10'h019, 10'h136, 10'h025, 10'h141, 10'h3D0, 10'h35D, 10'h366, 10'h018, 10'h036, 10'h265, 10'h158, 10'h2E6, 10'h378, 10'h227, 10'h3C8, 10'h36B, 10'h103, 10'h140, 10'h2D0, 10'h11D, 10'h37F, 10'h12E, 10'h013, 10'h324, 10'h288, 10'h1BB, 10'h01E, 10'h23F, 10'h3FE }, // j=8
    { 10'h001, 10'h200, 10'h112, 10'h0C8, 10'h344, 10'h0A9, 10'h0F4, 10'h3AA, 10'h366, 10'h030, 10'h0D8, 10'h30C, 10'h1AD, 10'h06F, 10'h38F, 10'h1E4, 10'h36B, 10'h206, 10'h109, 10'h2AD, 10'h1F4, 10'h323, 10'h302, 10'h192, 10'h288, 10'h376, 10'h078, 10'h1DC, 10'h397, 10'h188, 10'h2ED, 10'h0D4 }, // j=9
    { 10'h001, 10'h009, 10'h041, 10'h249, 10'h025, 10'h10D, 10'h177, 10'h2DD, 10'h018, 10'h0D8, 10'h211, 10'h2BD, 10'h378, 10'h08E, 10'h0F7, 10'h346, 10'h140, 10'h352, 10'h1F4, 10'h24F, 10'h013, 10'h08B, 10'h0DA, 10'h203, 10'h23F, 10'h3E3, 10'h0C4, 10'h2ED, 10'h1A8, 10'h0F3, 10'h362, 10'h044 }, // j=10
    { 10'h001, 10'h012, 10'h104, 10'h26C, 10'h250, 10'h1E8, 10'h16F, 10'h003, 10'h036, 10'h30C, 10'h2BD, 10'h2F9, 10'h238, 10'h3B1, 10'h005, 10'h05A, 10'h11D, 10'h3CE, 10'h302, 10'h241, 10'h0DA, 10'h00F, 10'h0EE, 10'h327, 10'h05B, 10'h10F, 10'h2CA, 10'h16E, 10'h011, 10'h132, 10'h160, 10'h0ED }, // j=11
    { 10'h001, 10'h024, 10'h019, 10'h344, 10'h141, 10'h177, 10'h366, 10'h180, 10'h265, 10'h1AD, 10'h378, 10'h238, 10'h36B, 10'h014, 10'h2D0, 10'h1F4, 10'h12E, 10'h130, 10'h288, 10'h386, 10'h23F, 10'h397, 10'h05B, 10'h21E, 10'h33A, 10'h362, 10'h110, 10'h201, 10'h0A6, 10'h275, 10'h3ED, 10'h2E8 }, // j=12
    { 10'h001, 10'h048, 10'h064, 10'h216, 10'h03D, 10'h2B3, 10'h006, 10'h1B0, 10'h158, 10'h06F, 10'h08E, 10'h3B1, 10'h014, 10'h1A9, 10'h3D9, 10'h162, 10'h324, 10'h1B4, 10'h078, 10'h1FF, 10'h0C4, 10'h345, 10'h2CA, 10'h1B1, 10'h110, 10'h00B, 10'h298, 10'h38C, 10'h2A7, 10'h1AF, 10'h269, 10'h03A }, // j=13
    { 10'h001, 10'h090, 10'h190, 10'h094, 10'h3D0, 10'h2DD, 10'h180, 10'h186, 10'h2E6, 10'h38F, 10'h0F7, 10'h005, 10'h2D0, 10'h3D9, 10'h2C4, 10'h08B, 10'h1BB, 10'h389, 10'h397, 10'h16C, 10'h1A8, 10'h32B, 10'h011, 10'h182, 10'h0A6, 10'h1C6, 10'h2A7, 10'h35E, 10'h1B6, 10'h1D0, 10'h0D5, 10'h301 }, // j=14
    { 10'h001, 10'h120, 10'h249, 10'h0A9, 10'h177, 10'h306, 10'h0D8, 10'h2B0, 10'h378, 10'h1E4, 10'h346, 10'h05A, 10'h1F4, 10'h162, 10'h08B, 10'h376, 10'h23F, 10'h087, 10'h2ED, 10'h165, 10'h362, 10'h092, 10'h160, 10'h2CB, 10'h3ED, 10'h36D, 10'h269, 10'h0E8, 10'h0D5, 10'h20B, 10'h26B, 10'h2A8 }, // j=15
    { 10'h001, 10'h240, 10'h136, 10'h141, 10'h35D, 10'h018, 10'h265, 10'h2E6, 10'h227, 10'h36B, 10'h140, 10'h11D, 10'h12E, 10'h324, 10'h1BB, 10'h23F, 10'h10E, 10'h3A6, 10'h33A, 10'h245, 10'h264, 10'h0A6, 10'h311, 10'h22A, 10'h21D, 10'h105, 10'h34B, 10'h1C2, 10'h39C, 10'h154, 10'h04E, 10'h2BB }, // j=16
    { 10'h001, 10'h089, 10'h0D1, 10'h21A, 10'h1B5, 10'h300, 10'h056, 10'h1BC, 10'h3C8, 10'h206, 10'h352, 10'h3CE, 10'h130, 10'h1B4, 10'h389, 10'h087, 10'h3A6, 10'h27D, 10'h106, 10'h304, 10'h272, 10'h2F8, 10'h3B2, 10'h0DB, 10'h349, 10'h296, 10'h3C9, 10'h28F, 10'h383, 10'h1D4, 10'h085, 10'h2B4 }, // j=17
    { 10'h001, 10'h112, 10'h344, 10'h0F4, 10'h366, 10'h0D8, 10'h1AD, 10'h38F, 10'h36B, 10'h109, 10'h1F4, 10'h302, 10'h288, 10'h078, 10'h397, 10'h2ED, 10'h33A, 10'h106, 10'h201, 10'h1DA, 10'h3ED, 10'h35E, 10'h356, 10'h3D4, 10'h1C2, 10'h26B, 10'h16D, 10'h3A4, 10'h2D7, 10'h290, 10'h1FE, 10'h1A4 }, // j=18
    { 10'h001, 10'h224, 10'h10B, 10'h3A9, 10'h205, 10'h336, 10'h38A, 10'h079, 10'h103, 10'h2AD, 10'h24F, 10'h241, 10'h386, 10'h1FF, 10'h16C, 10'h165, 10'h245, 10'h304, 10'h1DA, 10'h3D3, 10'h163, 10'h286, 10'h137, 10'h03E, 10'h3D6, 10'h3C5, 10'h3A8, 10'h021, 10'h23D, 10'h023, 10'h27C, 10'h235 }, // j=19
    { 10'h001, 10'h041, 10'h025, 10'h177, 10'h018, 10'h211, 10'h378, 10'h0F7, 10'h140, 10'h1F4, 10'h013, 10'h0DA, 10'h23F, 10'h0C4, 10'h1A8, 10'h362, 10'h264, 10'h272, 10'h3ED, 10'h163, 10'h105, 10'h0D5, 10'h1F0, 10'h117, 10'h04E, 10'h3EA, 10'h0A4, 10'h1FE, 10'h299, 10'h1B8, 10'h37B, 10'h034 }, // j=20
    { 10'h001, 10'h082, 10'h094, 10'h3AA, 10'h180, 10'h2B0, 10'h38F, 10'h36E, 10'h2D0, 10'h323, 10'h08B, 10'h00F, 10'h397, 10'h345, 10'h32B, 10'h092, 10'h0A6, 10'h2F8, 10'h35E, 10'h286, 10'h0D5, 10'h3E0, 10'h055, 10'h270, 10'h2D7, 10'h0AD, 10'h367, 10'h24B, 10'h31E, 10'h24E, 10'h194, 10'h08A }, // j=21
    { 10'h001, 10'h104, 10'h250, 10'h16F, 10'h036, 10'h2BD, 10'h238, 10'h005, 10'h11D, 10'h302, 10'h0DA, 10'h0EE, 10'h05B, 10'h2CA, 10'h011, 10'h160, 10'h311, 10'h3B2, 10'h356, 10'h137, 10'h1F0, 10'h055, 10'h0E9, 10'h34E, 10'h161, 10'h215, 10'h1E2, 10'h239, 10'h101, 10'h34D, 10'h26D, 10'h0EC } // j=22
  };


  //python_index = {0, 1, ..., 20, 21}  feedback[0]:0x136   feedback[21]:0x253 
  //     此时feedback[j] = α^{ j*M }

  //verilog_index = {21, 20, ..., 1, 0} FEEDBACK[21]: 136   FEEDBACK[0]: 253    
  //     此时 feedback[j] = α^{ (M- 1 - j)*M }

  // 直观显示FEEDBACK = {α^(1*32)=10'h136, α^(2*32)=10'h35D, ..., α^(22*32)}
  localparam logic [9:0] FEEDBACK [J-1:0] = '{ 10'h136, 10'h35D, 10'h265, 10'h227, 10'h140, 10'h12E, 10'h1BB, 10'h10E, 10'h33A, 10'h264, 10'h311, 10'h21D, 10'h34B, 10'h39C, 10'h04E, 10'h214, 10'h3DF, 10'h21F, 10'h127, 10'h12F, 10'h08D, 10'h253 };


endpackage : rs544_syndrome_consts_M32_pkg

`endif // RS544_SYNDROME_CONSTS_M32_SVH
