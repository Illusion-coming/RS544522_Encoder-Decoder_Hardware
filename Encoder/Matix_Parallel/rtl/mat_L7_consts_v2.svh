// Auto-generated constants for matrix RS encoder (GF(2^10))
// L = 7, R = 22, W = 10

// =============================================================
// rs_mat_L7_consts_pkg.sv
// 把矩阵常量封装成 SystemVerilog package，供任意模块 import 使用
// - 适配 VCS 使用 -f filelist 的编译模式；无需 `include` 路径管理
// - 建议把本文件加入 filelist 并置于 DUT/TB 之前
// - 请将你现有 `mat_L7_consts.svh` 中两组数组的**字面量**粘贴到下方相应位置
//   （确保已修复“末行多逗号”语法问题）
// =============================================================
package rs_mat_L7_consts_pkg;
    // 约定：GF(2^10)；R=22；L=7
    parameter int W = 10;
    parameter int R = 22;
    parameter int L = 7;

    // -----------------------------------------------------------
    // 22x22: P_L = T^L （按行主序，行=输出幂次 i，列=输入幂次 j）
    // 将你文件里的 P_L 数组字面量粘贴到下面的大括号内：
    //   形如：'{ '{10'd..., 10'd..., ...}, '{...}, ... }
    // -----------------------------------------------------------
    parameter logic [W-1:0] P_L_7 [0:R-1][0:R-1] = '{
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd807, 10'd55, 10'd133, 10'd880, 10'd818, 10'd456, 10'd448 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd280, 10'd730, 10'd461, 10'd874, 10'd768, 10'd840, 10'd1015 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd944, 10'd427, 10'd451, 10'd751, 10'd436, 10'd187, 10'd1010 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd621, 10'd841, 10'd836, 10'd584, 10'd967, 10'd276, 10'd292 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd3, 10'd103, 10'd356, 10'd940, 10'd56, 10'd126, 10'd571 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd177, 10'd42, 10'd184, 10'd1012, 10'd215, 10'd900, 10'd956 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd365, 10'd723, 10'd799, 10'd729, 10'd681, 10'd736, 10'd897 },
      { 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd657, 10'd742, 10'd112, 10'd977, 10'd125, 10'd187, 10'd806 },
      { 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd813, 10'd641, 10'd662, 10'd368, 10'd472, 10'd49, 10'd907 },
      { 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1010, 10'd757, 10'd896, 10'd809, 10'd251, 10'd555, 10'd152 },
      { 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd712, 10'd876, 10'd303, 10'd626, 10'd780, 10'd239, 10'd415 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd466, 10'd178, 10'd17, 10'd718, 10'd550, 10'd337, 10'd578 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd374, 10'd462, 10'd230, 10'd465, 10'd583, 10'd607, 10'd821 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd544, 10'd724, 10'd946, 10'd696, 10'd14, 10'd1001, 10'd91 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd374, 10'd572, 10'd640, 10'd626, 10'd561, 10'd119, 10'd397 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd482, 10'd996, 10'd985, 10'd1018, 10'd359, 10'd898, 10'd70 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd555, 10'd102, 10'd881, 10'd943, 10'd718, 10'd989, 10'd404 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd0, 10'd976, 10'd840, 10'd582, 10'd364, 10'd1018, 10'd672, 10'd598 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd0, 10'd452, 10'd495, 10'd494, 10'd510, 10'd238, 10'd902, 10'd41 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd0, 10'd899, 10'd917, 10'd579, 10'd191, 10'd529, 10'd770, 10'd655 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd0, 10'd783, 10'd808, 10'd196, 10'd225, 10'd872, 10'd448, 10'd272 },
      { 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd0, 10'd1, 10'd513, 10'd540, 10'd88, 10'd464, 10'd656, 10'd738, 10'd457 }
    };

    // -----------------------------------------------------------
    // 7x22: K_VEC[k][i] = (T^k · u)[i]；lane j 使用 K_VEC[6-j]
    // 将你文件里的 K_VEC 数组字面量粘贴到下面的大括号内：
    //   形如：'{ '{10'd..., ...}, '{...}, ... }  共 7 行
    // -----------------------------------------------------------
    parameter logic [W-1:0] K_VEC_7 [0:L-1][0:R-1] = '{
        { 10'd807, 10'd280, 10'd944, 10'd621, 10'd3, 10'd177, 10'd365, 10'd657, 10'd813, 10'd1010, 10'd712, 10'd466, 10'd374, 10'd544, 10'd374, 10'd482, 10'd555, 10'd976, 10'd452, 10'd899, 10'd783, 10'd513 },
        { 10'd55, 10'd730, 10'd427, 10'd841, 10'd103, 10'd42, 10'd723, 10'd742, 10'd641, 10'd757, 10'd876, 10'd178, 10'd462, 10'd724, 10'd572, 10'd996, 10'd102, 10'd840, 10'd495, 10'd917, 10'd808, 10'd540 },
        { 10'd133, 10'd461, 10'd451, 10'd836, 10'd356, 10'd184, 10'd799, 10'd112, 10'd662, 10'd896, 10'd303, 10'd17, 10'd230, 10'd946, 10'd640, 10'd985, 10'd881, 10'd582, 10'd494, 10'd579, 10'd196, 10'd88 },
        { 10'd880, 10'd874, 10'd751, 10'd584, 10'd940, 10'd1012, 10'd729, 10'd977, 10'd368, 10'd809, 10'd626, 10'd718, 10'd465, 10'd696, 10'd626, 10'd1018, 10'd943, 10'd364, 10'd510, 10'd191, 10'd225, 10'd464 },
        { 10'd818, 10'd768, 10'd436, 10'd967, 10'd56, 10'd215, 10'd681, 10'd125, 10'd472, 10'd251, 10'd780, 10'd550, 10'd583, 10'd14, 10'd561, 10'd359, 10'd718, 10'd1018, 10'd238, 10'd529, 10'd872, 10'd656 },
        { 10'd456, 10'd840, 10'd187, 10'd276, 10'd126, 10'd900, 10'd736, 10'd187, 10'd49, 10'd555, 10'd239, 10'd337, 10'd607, 10'd1001, 10'd119, 10'd898, 10'd989, 10'd672, 10'd902, 10'd770, 10'd448, 10'd738 },
        { 10'd448, 10'd1015, 10'd1010, 10'd292, 10'd571, 10'd956, 10'd897, 10'd806, 10'd907, 10'd152, 10'd415, 10'd578, 10'd821, 10'd91, 10'd397, 10'd70, 10'd404, 10'd598, 10'd41, 10'd655, 10'd272, 10'd457 }
      };


endpackage : rs_mat_L7_consts_pkg


